<?xml version="1.0" encoding="utf-8"?>

<launch>
    <arg name="run_mission_planning" default="false" />
    <arg name="run_mission_execution" default="false" />
    <arg name="run_pid_control" default="true" />


    <!-- ################### -->
    <!-- CONFIG              -->
    <!-- ################### -->
    <rosparam command="load" file="$(find gnc_setup)/config/config.yaml"/>


    <!-- ################### -->
    <!-- GNC                 -->
    <!-- ################### -->
    <arg name="use_ned_pos_from_gnss" default="false" /> <!-- Only temporally during testing --> 
    <arg name="use_optical_flow_as_feedback" default="false"/>  <!-- true -> Using velocity estimates from optical_flow at 30 Hz. false -> Using polled velocity estimates at 5 Hz -->

    <param name="use_ned_pos_from_gnss" type="bool" value="$(arg use_ned_pos_from_gnss)" />
    <param name="use_optical_flow_as_feedback" type="bool" value="$(arg use_optical_flow_as_feedback)" />

    <group if="$(arg run_pid_control)">
        <!-- Using PID control  -->
        <arg name="control_method" default="pid" /> 
        <param name="control_method" type="string" value="$(arg control_method)" />

        <!-- Pure pursuit guidance  -->
        <node
            name="pure_pursuit_guidance"
            pkg="guidance"
            type="pure_pursuit.py"
            output="screen">
            <rosparam command="load" file="$(find guidance)/config/config.yaml" />
        </node>


        <!-- PID velocity control -->
        <node
            name="velocity_control"
            pkg="velocity_control"
            type="velocity_controller.py"
            output="screen">
            <rosparam command="load" file="$(find velocity_control)/config/config.yaml" />
        </node>

    </group>

    <group unless="$(arg run_pid_control)">
        <!-- MPC -->

        <arg name="control_method" default="mpc" /> 
        <param name="control_method" type="string" value="$(arg control_method)" />

        <node
            name="mpc"
            pkg="mpc"
            type="model_predictive_controller.py"
            output="screen">
            <rosparam command="load" file="$(find mpc)/config/config.yaml" />
        </node>
    </group>


    <!-- ################### -->
    <!-- Mission planning    -->
    <!-- ################### -->
    <group if="$(arg run_mission_planning)">
        <node
            name="mission_planning"
            pkg="mission_planning"
            type="mission_planner.py"
            output="screen">
            <rosparam command="load" file="$(find mission_planning)/config/config.yaml" />
        </node>
    </group>


    <!-- ################### -->
    <!-- Mission execution -->
    <!-- ################### -->
    <group if="$(arg run_mission_execution)">
        <node
            name="mission_execution"
            pkg="mission_execution"
            type="mission_executor.py"
            output="screen">
            <rosparam command="load" file="$(find mission_execution)/config/config.yaml" />
        </node>
    </group>
    
</launch>